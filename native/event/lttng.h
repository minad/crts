// Generated by generate.pl from defs.in

#undef TRACEPOINT_PROVIDER
#define TRACEPOINT_PROVIDER chili

#undef TRACEPOINT_INCLUDE
#define TRACEPOINT_INCLUDE "../event/lttng.h"

#if !defined(_CHI_EVENT_LTTNG_H) || defined(TRACEPOINT_HEADER_MULTI_READ)
#define _CHI_EVENT_LTTNG_H

#include <lttng/tracepoint.h>
#include "../processor.h"

TRACEPOINT_EVENT(
    chili,
    GC_MARK_PHASE_BEGIN,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_MARK_PHASE_END,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_MARK_SLICE_BEGIN,
    TP_ARGS(const ChiWorker*, worker),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_MARK_SLICE_END,
    TP_ARGS(const ChiWorker*, worker, const ChiEventMark*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
        ctf_integer(size_t, object_count, d->object.count)
        ctf_integer(size_t, object_words, d->object.words)
        ctf_integer(size_t, stack_count, d->stack.count)
        ctf_integer(size_t, stack_words, d->stack.words)
        ctf_integer(size_t, collapsed, d->collapsed)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_SCAVENGER_BEGIN,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_SCAVENGER_END,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventScavenger*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
        ctf_integer(size_t, promoted_copied_count, d->promoted.copied.count)
        ctf_integer(size_t, promoted_copied_words, d->promoted.copied.words)
        ctf_integer(size_t, promoted_scanned_count, d->promoted.scanned.count)
        ctf_integer(size_t, promoted_scanned_words, d->promoted.scanned.words)
        ctf_integer(size_t, promoted_thunk, d->promoted.thunk)
        ctf_integer(size_t, scavenger_dirty_major_count, d->scavenger.dirty.major.count)
        ctf_integer(size_t, scavenger_dirty_major_words, d->scavenger.dirty.major.words)
        ctf_integer(size_t, scavenger_dirty_stacks_count, d->scavenger.dirty.stacks.count)
        ctf_integer(size_t, scavenger_dirty_stacks_words, d->scavenger.dirty.stacks.words)
        ctf_integer(size_t, scavenger_raw_promoted_count, d->scavenger.raw.promoted.count)
        ctf_integer(size_t, scavenger_raw_promoted_words, d->scavenger.raw.promoted.words)
        ctf_integer(size_t, scavenger_raw_copied_count, d->scavenger.raw.copied.count)
        ctf_integer(size_t, scavenger_raw_copied_words, d->scavenger.raw.copied.words)
        ctf_integer(size_t, scavenger_object_promoted_count, d->scavenger.object.promoted.count)
        ctf_integer(size_t, scavenger_object_promoted_words, d->scavenger.object.promoted.words)
        ctf_integer(size_t, scavenger_object_copied_count, d->scavenger.object.copied.count)
        ctf_integer(size_t, scavenger_object_copied_words, d->scavenger.object.copied.words)
        ctf_integer(size_t, scavenger_collapsed, d->scavenger.collapsed)
        ctf_integer(uint32_t, scavenger_aging, d->scavenger.aging)
        ctf_integer(bool, scavenger_snapshot, d->scavenger.snapshot)
        ctf_integer(size_t, minorHeapBefore_usedWords, d->minorHeapBefore.usedWords)
        ctf_integer(size_t, minorHeapBefore_totalWords, d->minorHeapBefore.totalWords)
        ctf_integer(size_t, minorHeapAfter_usedWords, d->minorHeapAfter.usedWords)
        ctf_integer(size_t, minorHeapAfter_totalWords, d->minorHeapAfter.totalWords)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_SWEEP_SLICE_BEGIN,
    TP_ARGS(const ChiWorker*, worker),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_SWEEP_SLICE_END,
    TP_ARGS(const ChiWorker*, worker, const ChiEventSweep*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
        ctf_integer(size_t, small_alive_count, d->small.alive.count)
        ctf_integer(size_t, small_alive_words, d->small.alive.words)
        ctf_integer(size_t, small_garbage_count, d->small.garbage.count)
        ctf_integer(size_t, small_garbage_words, d->small.garbage.words)
        ctf_integer(size_t, medium_alive_count, d->medium.alive.count)
        ctf_integer(size_t, medium_alive_words, d->medium.alive.words)
        ctf_integer(size_t, medium_garbage_count, d->medium.garbage.count)
        ctf_integer(size_t, medium_garbage_words, d->medium.garbage.words)
        ctf_integer(size_t, large_alive_count, d->large.alive.count)
        ctf_integer(size_t, large_alive_words, d->large.alive.words)
        ctf_integer(size_t, large_garbage_count, d->large.garbage.count)
        ctf_integer(size_t, large_garbage_words, d->large.garbage.words)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_PARK_BEGIN,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_PARK_END,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_RUN_BEGIN,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_RUN_END,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_SERVICE_BEGIN,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_SERVICE_END,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    SHUTDOWN_BEGIN,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    SHUTDOWN_END,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    STARTUP_BEGIN,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    STARTUP_END,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_RUN_BEGIN,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_RUN_END,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_SCHED_BEGIN,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_SCHED_END,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventThreadNext*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, nextTid, d->nextTid)
    )
)

TRACEPOINT_EVENT(
    chili,
    USER_DURATION_BEGIN,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    USER_DURATION_END,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    BIGINT_OVERFLOW,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    BLOCK_CHUNK_FREE,
    TP_ARGS(const ChiRuntime*, rt, const ChiEventChunk*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
        ctf_integer(size_t, heapSize, d->heapSize)
        ctf_integer(size_t, size, d->size)
        ctf_integer(size_t, align, d->align)
        ctf_integer_hex(uintptr_t, start, d->start)
    )
)

TRACEPOINT_EVENT(
    chili,
    BLOCK_CHUNK_NEW,
    TP_ARGS(const ChiRuntime*, rt, const ChiEventChunk*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
        ctf_integer(size_t, heapSize, d->heapSize)
        ctf_integer(size_t, size, d->size)
        ctf_integer(size_t, align, d->align)
        ctf_integer_hex(uintptr_t, start, d->start)
    )
)

TRACEPOINT_EVENT(
    chili,
    ENTRY_BLACKHOLE,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    ENTRY_START,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    ENTRY_TIMER_INT,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    ENTRY_UNHANDLED,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    ENTRY_USER_INT,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    EXCEPTION,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventException*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, name, d->name.bytes, uint32_t, d->name.size)
        ctf_sequence_text(uint8_t, trace, d->trace.bytes, uint32_t, d->trace.size)
        ctf_integer(bool, handled, d->handled)
    )
)

TRACEPOINT_EVENT(
    chili,
    FFI_LOAD,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventFFI*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, module, d->module.bytes, uint32_t, d->module.size)
        ctf_sequence_text(uint8_t, name, d->name.bytes, uint32_t, d->name.size)
    )
)

TRACEPOINT_EVENT(
    chili,
    FNLOG_CONT,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventFnLog*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, fn, d->fn.bytes, uint32_t, d->fn.size)
        ctf_sequence_text(uint8_t, file, d->file.bytes, uint32_t, d->file.size)
        ctf_integer(size_t, size, d->size)
        ctf_integer(uint32_t, line, d->line)
        ctf_integer(bool, interp, d->interp)
    )
)

TRACEPOINT_EVENT(
    chili,
    FNLOG_ENTER,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventFnLog*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, fn, d->fn.bytes, uint32_t, d->fn.size)
        ctf_sequence_text(uint8_t, file, d->file.bytes, uint32_t, d->file.size)
        ctf_integer(size_t, size, d->size)
        ctf_integer(uint32_t, line, d->line)
        ctf_integer(bool, interp, d->interp)
    )
)

TRACEPOINT_EVENT(
    chili,
    FNLOG_ENTER_JMP,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventFnLog*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, fn, d->fn.bytes, uint32_t, d->fn.size)
        ctf_sequence_text(uint8_t, file, d->file.bytes, uint32_t, d->file.size)
        ctf_integer(size_t, size, d->size)
        ctf_integer(uint32_t, line, d->line)
        ctf_integer(bool, interp, d->interp)
    )
)

TRACEPOINT_EVENT(
    chili,
    FNLOG_FFI,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventFnLogFFI*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, name, d->name.bytes, uint32_t, d->name.size)
    )
)

TRACEPOINT_EVENT(
    chili,
    FNLOG_LEAVE,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventFnLog*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, fn, d->fn.bytes, uint32_t, d->fn.size)
        ctf_sequence_text(uint8_t, file, d->file.bytes, uint32_t, d->file.size)
        ctf_integer(size_t, size, d->size)
        ctf_integer(uint32_t, line, d->line)
        ctf_integer(bool, interp, d->interp)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_NOTIFY,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_PHASE_GLOBAL,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventGCPhase*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
        ctf_integer(uint32_t, phase, d->phase)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_PHASE_LOCAL,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventGCPhase*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
        ctf_integer(uint32_t, phase, d->phase)
    )
)

TRACEPOINT_EVENT(
    chili,
    GC_TRIGGER,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    HEAP_ALLOC_FAILED,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventHeapAlloc*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, type, d->type.bytes, uint32_t, d->type.size)
        ctf_integer(size_t, size, d->size)
    )
)

TRACEPOINT_EVENT(
    chili,
    HEAP_CHUNK_FREE,
    TP_ARGS(const ChiRuntime*, rt, const ChiEventChunk*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
        ctf_integer(size_t, heapSize, d->heapSize)
        ctf_integer(size_t, size, d->size)
        ctf_integer(size_t, align, d->align)
        ctf_integer_hex(uintptr_t, start, d->start)
    )
)

TRACEPOINT_EVENT(
    chili,
    HEAP_CHUNK_NEW,
    TP_ARGS(const ChiRuntime*, rt, const ChiEventChunk*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
        ctf_integer(size_t, heapSize, d->heapSize)
        ctf_integer(size_t, size, d->size)
        ctf_integer(size_t, align, d->align)
        ctf_integer_hex(uintptr_t, start, d->start)
    )
)

TRACEPOINT_EVENT(
    chili,
    HEAP_LIMIT,
    TP_ARGS(const ChiRuntime*, rt, const ChiEventHeapLimit*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
        ctf_integer(size_t, heapSize, d->heapSize)
        ctf_integer(size_t, softLimit, d->softLimit)
        ctf_integer(size_t, hardLimit, d->hardLimit)
        ctf_integer(uint32_t, limit, d->limit)
    )
)

TRACEPOINT_EVENT(
    chili,
    HEAP_USAGE,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventHeapUsage*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
        ctf_integer(uint64_t, small_allocWords, d->small.allocWords)
        ctf_integer(size_t, small_totalWords, d->small.totalWords)
        ctf_integer(uint64_t, medium_allocWords, d->medium.allocWords)
        ctf_integer(size_t, medium_totalWords, d->medium.totalWords)
        ctf_integer(uint64_t, large_allocWords, d->large.allocWords)
        ctf_integer(size_t, large_totalWords, d->large.totalWords)
        ctf_integer(size_t, totalChunkWords, d->totalChunkWords)
    )
)

TRACEPOINT_EVENT(
    chili,
    LOG_BEGIN,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    LOG_END,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    MODULE_INIT,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventModuleInit*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, fn, d->fn.bytes, uint32_t, d->fn.size)
        ctf_sequence_text(uint8_t, file, d->file.bytes, uint32_t, d->file.size)
        ctf_integer(size_t, size, d->size)
        ctf_integer(uint32_t, line, d->line)
        ctf_integer(bool, interp, d->interp)
    )
)

TRACEPOINT_EVENT(
    chili,
    MODULE_LOAD,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventModuleLoad*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, module, d->module.bytes, uint32_t, d->module.size)
        ctf_sequence_text(uint8_t, file, d->file.bytes, uint32_t, d->file.size)
        ctf_sequence_text(uint8_t, path, d->path.bytes, uint32_t, d->path.size)
    )
)

TRACEPOINT_EVENT(
    chili,
    MODULE_UNLOAD,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventModuleName*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, module, d->module.bytes, uint32_t, d->module.size)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_DESTROY,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_INIT,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, wid, proc->worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_MSG_RECV,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventProcMsgRecv*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, message, d->message)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_MSG_SEND,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventProcMsgSend*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, receiverWid, d->receiverWid)
        ctf_integer(uint32_t, message, d->message)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_REQUEST,
    TP_ARGS(const ChiRuntime*, rt, const ChiEventProcRequest*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
        ctf_integer(uint32_t, request, d->request)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_STALL,
    TP_ARGS(const ChiRuntime*, rt, const ChiEventProcStall*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
        ctf_integer(uint32_t, wid, d->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROC_SUSPEND,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventProcSuspend*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, suspendWid, d->suspendWid)
        ctf_integer(uint32_t, ms, d->ms)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROF_DISABLED,
    TP_ARGS(const ChiWorker*, worker),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROF_ENABLED,
    TP_ARGS(const ChiWorker*, worker),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    PROF_TRACE,
    TP_ARGS(const ChiWorker*, worker, const ChiEventStackTrace*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
        ctf_integer_hex(uintptr_t, stack, d->stack)
        ctf_sequence_text(uint8_t, trace, d->trace.bytes, uint32_t, d->trace.size)
    )
)

TRACEPOINT_EVENT(
    chili,
    SIGNAL,
    TP_ARGS(const ChiRuntime*, rt, const ChiEventSignal*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
        ctf_integer(uint32_t, sig, d->sig)
    )
)

TRACEPOINT_EVENT(
    chili,
    STACK_ACTIVATE,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventStackActive*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer_hex(uintptr_t, stack, d->stack)
        ctf_integer(bool, scanned, d->scanned)
    )
)

TRACEPOINT_EVENT(
    chili,
    STACK_DEACTIVATE,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventStackActive*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer_hex(uintptr_t, stack, d->stack)
        ctf_integer(bool, scanned, d->scanned)
    )
)

TRACEPOINT_EVENT(
    chili,
    STACK_RESIZE,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventStackSize*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer_hex(uintptr_t, oldStack, d->oldStack)
        ctf_integer_hex(uintptr_t, newStack, d->newStack)
        ctf_integer(size_t, reqSize, d->reqSize)
        ctf_integer(size_t, oldSize, d->oldSize)
        ctf_integer(size_t, newSize, d->newSize)
        ctf_integer(size_t, usedSize, d->usedSize)
    )
)

TRACEPOINT_EVENT(
    chili,
    STACK_TRACE,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventStackTrace*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer_hex(uintptr_t, stack, d->stack)
        ctf_sequence_text(uint8_t, trace, d->trace.bytes, uint32_t, d->trace.size)
    )
)

TRACEPOINT_EVENT(
    chili,
    STRBUILDER_OVERFLOW,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    SYSTEM_STATS,
    TP_ARGS(const ChiRuntime*, rt, const ChiEventSystemStats*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
        ctf_integer(uint64_t, cpuTimeUser, CHI_UN(Nanos, d->cpuTimeUser))
        ctf_integer(uint64_t, cpuTimeSystem, CHI_UN(Nanos, d->cpuTimeSystem))
        ctf_integer(size_t, residentSize, d->residentSize)
        ctf_integer(uint64_t, pageFault, d->pageFault)
        ctf_integer(uint64_t, contextSwitch, d->contextSwitch)
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_ENQUEUE,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventThreadEnqueue*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, enqTid, d->enqTid)
        ctf_integer(uint32_t, phase, d->phase)
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_MIGRATE,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventThreadMigrate*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, migratedTid, d->migratedTid)
        ctf_integer(uint32_t, newOwnerWid, d->newOwnerWid)
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_NAME,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventThreadName*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, nameTid, d->nameTid)
        ctf_sequence_text(uint8_t, name, d->name.bytes, uint32_t, d->name.size)
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_NEW,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventThreadNew*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, newTid, d->newTid)
        ctf_integer_hex(uintptr_t, newStack, d->newStack)
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_SWITCH,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventThreadNext*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, nextTid, d->nextTid)
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_TAKEOVER,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventThreadMigrate*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, migratedTid, d->migratedTid)
        ctf_integer(uint32_t, newOwnerWid, d->newOwnerWid)
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_TERMINATED,
    TP_ARGS(const ChiProcessor*, proc),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
    )
)

TRACEPOINT_EVENT(
    chili,
    THREAD_YIELD,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventThreadYield*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_integer(uint32_t, phase, d->phase)
    )
)

TRACEPOINT_EVENT(
    chili,
    TICK,
    TP_ARGS(const ChiRuntime*, rt),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)rt)
    )
)

TRACEPOINT_EVENT(
    chili,
    USER_BUFFER,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventUserBuffer*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_hex(uint8_t, buffer, d->buffer.bytes, uint32_t, d->buffer.size)
    )
)

TRACEPOINT_EVENT(
    chili,
    USER_STRING,
    TP_ARGS(const ChiProcessor*, proc, const ChiEventUserString*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)proc->rt)
        ctf_integer(uint32_t, tid, chiThreadId(proc->thread))
        ctf_sequence_text(uint8_t, string, d->string.bytes, uint32_t, d->string.size)
    )
)

TRACEPOINT_EVENT(
    chili,
    WORKER_DESTROY,
    TP_ARGS(const ChiWorker*, worker),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    WORKER_INIT,
    TP_ARGS(const ChiWorker*, worker),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
    )
)

TRACEPOINT_EVENT(
    chili,
    WORKER_NAME,
    TP_ARGS(const ChiWorker*, worker, const ChiEventWorkerName*, d),
    TP_FIELDS(
        ctf_integer_hex(uintptr_t, rt, (uintptr_t)worker->rt)
        ctf_integer(uint32_t, wid, worker->wid)
        ctf_sequence_text(uint8_t, name, d->name.bytes, uint32_t, d->name.size)
    )
)

#endif

#include <lttng/tracepoint-event.h>
