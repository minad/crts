CHI_NEWTYPE(Micros, uint64_t)
CHI_NEWTYPE(Nanos,  uint64_t)
CHI_NEWTYPE(Millis, uint64_t)
CHI_NEWTYPE(Secs,   uint64_t)
typedef uint32_t ChiWid;

typedef struct {
    uint32_t newTid;
    uintptr_t newStack;
} ChiEventThreadNew;

typedef struct {
    ChiStringRef fn;
    ChiStringRef file;
    size_t       size;
    uint32_t     line;
    bool         interp;
} ChiLocInfo;

typedef struct {
    ChiNanos cpuTimeUser;
    ChiNanos cpuTimeSystem;
    size_t   maxResidentSize;
    size_t   currResidentSize;
    uint64_t pageFault;
    uint64_t voluntaryContextSwitch;
    uint64_t involuntaryContextSwitch;
} ChiSystemStats;

typedef struct {
    uint64_t allocSize;
    size_t   totalSize;
} ChiHeapClassUsage;

typedef struct {
    ChiHeapClassUsage small;
    ChiHeapClassUsage medium;
    ChiHeapClassUsage large;
    size_t            totalSize;
} ChiHeapUsage;

typedef struct {
    size_t count;
    size_t words;
} ChiObjectCount;

typedef struct {
    ChiObjectCount copied;
    ChiObjectCount scanned;
    size_t         thunk;
} ChiPromoteStats;

typedef struct {
    ChiObjectCount promoted;
    ChiObjectCount copied;
} ChiScavengerObjectCount;

typedef struct {
    ChiObjectCount promoted;
    ChiObjectCount copied;
} ChiScavengerRawCount;

typedef struct {
    ChiObjectCount object;
    ChiObjectCount stack;
    ChiObjectCount card;
} ChiScavengerDirtyCount;

typedef struct {
    size_t usedSize;
    size_t totalSize;
} ChiMinorHeapUsage;

typedef struct {
    ChiScavengerDirtyCount  dirty;
    ChiScavengerRawCount    raw;
    ChiScavengerObjectCount object;
    size_t                  collapsed;
    uint32_t                aging;
    bool                    snapshot;
} ChiScavengerStats;

typedef struct {
    ChiPromoteStats   promoted;
    ChiScavengerStats scavenger;
    ChiMinorHeapUsage minorHeapBefore;
    ChiMinorHeapUsage minorHeapAfter;
} ChiEventScavenger;

typedef struct {
    ChiObjectCount alive;
    ChiObjectCount garbage;
} ChiSweepClassStats;

typedef struct {
    ChiSweepClassStats small;
    ChiSweepClassStats medium;
    ChiSweepClassStats large;
} ChiSweepStats;

typedef struct {
    ChiObjectCount object;
    ChiObjectCount stack;
    size_t         collapsed;
} ChiScanStats;

typedef struct {
    uintptr_t stack;
    size_t size;
    size_t step;
    size_t copied;
} ChiEventStackSize;

typedef struct {
    uintptr_t stack;
    ChiStringRef trace;
} ChiEventStackTrace;

typedef struct {
    uintptr_t stack;
} ChiEventStack;

typedef struct {
    ChiStringRef name;
} ChiEventFnLogFFI;

typedef struct {
    ChiStringRef name;
    ChiStringRef trace;
} ChiEventException;

typedef enum {
    CHI_REQUEST_EXIT,
    CHI_REQUEST_DUMP,
    CHI_REQUEST_NOTIFYINTERRUPT,
    CHI_REQUEST_TIMERINTERRUPT,
    CHI_REQUEST_USERINTERRUPT,
    CHI_REQUEST_HANDSHAKE,
    CHI_REQUEST_SCAVENGE,
    CHI_REQUEST_PROMOTE,
} ChiProcessorRequest;

typedef struct {
    ChiProcessorRequest request;
} ChiEventProcRequest;

typedef enum {
    CHI_MessageEnqueue,
    CHI_MessageEnqueueRunning,
    CHI_MessageInterrupt,
    CHI_MessageMigrate,
} ChiProcessorMessage;

typedef struct {
    ChiWid receiverWid;
    ChiProcessorMessage message;
} ChiEventProcMsgSend;

typedef struct {
    ChiProcessorMessage message;
} ChiEventProcMsgRecv;

typedef struct {
    ChiStringRef name;
} ChiEventWorkerName;

typedef struct {
    ChiBytesRef buffer;
} ChiEventUserBuffer;

typedef struct {
    ChiStringRef string;
} ChiEventUserString;

typedef struct {
    size_t    heapSize;
    size_t    size;
    size_t    align;
    uintptr_t start;
} ChiEventChunk;

typedef struct {
    ChiStringRef module;
    ChiStringRef name;
} ChiEventFFI;

typedef struct {
    ChiStringRef module;
    ChiStringRef file;
    ChiStringRef path;
} ChiEventModuleLoad;

typedef struct {
    ChiStringRef module;
} ChiEventModuleName;

typedef enum {
    CHI_SIG_USERINTERRUPT,
    CHI_SIG_DUMP
} ChiSig;

typedef struct {
    ChiSig sig;
} ChiEventSignal;

typedef enum {
    CHI_GC_IDLE,
    CHI_GC_SYNC1,
    CHI_GC_SYNC2,
    CHI_GC_ASYNC,
} ChiGCPhase;

typedef struct {
    ChiStringRef type;
    size_t       size;
} ChiEventHeapAlloc;

typedef struct {
    ChiWid notifyWid;
} ChiEventProcNotify;

typedef struct {
    uint32_t ms;
} ChiEventProcSuspend;

typedef enum {
    CHI_Running,
    CHI_Terminated,
    CHI_WaitSleep,
    CHI_WaitVarPut,
    CHI_WaitVarTake,
} ChiThreadPhase;

typedef struct {
    ChiThreadPhase phase;
} ChiEventThreadYield;

typedef struct {
    uint32_t nextTid;
} ChiEventThreadNext;

typedef struct {
    uint32_t       enqTid;
    ChiThreadPhase phase;
} ChiEventThreadEnqueue;

typedef struct {
    uint32_t     nameTid;
    ChiStringRef name;
} ChiEventThreadName;

typedef struct {
    ChiWid wid;
} ChiEventProcStall;

typedef struct {
    uint32_t migratedTid;
    ChiWid   newOwnerWid;
} ChiEventThreadMigrate;

typedef struct {
    ChiGCPhase phase;
} ChiEventGCPhase;

typedef ChiHeapUsage   ChiEventHeapUsage;
typedef ChiSystemStats ChiEventSystemStats;
typedef ChiLocInfo     ChiEventFnLog;
typedef ChiLocInfo     ChiEventModuleInit;
typedef ChiSweepStats  ChiEventSweep;
typedef ChiScanStats   ChiEventMark;

# class  name                ctx       payload       stats         description
DURATION GC_MARK_PHASE       RUNTIME   0             1             "GC: Marking phase"
DURATION GC_MARK_SLICE       WORKER    Mark          1             "GC: Marking slice of garbage collector"
DURATION GC_SCAVENGER        PROCESSOR Scavenger     1             "GC: Scavenger running"
DURATION GC_SWEEP_SLICE      WORKER    Sweep         1             "GC: Sweeping slice of garbage collector"
DURATION PROC_PARK           THREAD    0             1             "Processor: Parked"
DURATION PROC_RUN            PROCESSOR 0             1             "Processor: Running"
DURATION PROC_SERVICE        PROCESSOR 0             1             "Processor: Handling service requests"
DURATION SHUTDOWN            RUNTIME   0             1             "Runtime shutdown"
DURATION STARTUP             RUNTIME   0             1             "Runtime startup"
DURATION THREAD_RUN          THREAD    0             1             "Thread: Running"
DURATION THREAD_SCHED        LIBRARY   ThreadNext    1             "Thread: Scheduler running"
DURATION USER_DURATION       LIBRARY   0             0             "User event with duration"
INSTANT  BIGINT_OVERFLOW     THREAD    0             0             "Big integer overflow"
INSTANT  BLOCK_CHUNK_FREE    RUNTIME   Chunk         0             "Block manager: Chunk freed"
INSTANT  BLOCK_CHUNK_NEW     RUNTIME   Chunk         0             "Block manager: New chunk allocated"
INSTANT  ENTRY_BLACKHOLE     LIBRARY   0             0             "Entry point: Blackhole"
INSTANT  ENTRY_NOTIFY_INT    LIBRARY   0             0             "Entry point: Notify interrupt"
INSTANT  ENTRY_START         LIBRARY   0             0             "Entry point: Start"
INSTANT  ENTRY_TIMER_INT     LIBRARY   0             0             "Entry point: Timer interrupt"
INSTANT  ENTRY_UNHANDLED     LIBRARY   0             0             "Entry point: Unhandled exception"
INSTANT  ENTRY_USER_INT      LIBRARY   0             0             "Entry point: User interrupt"
INSTANT  EXCEPTION           THREAD    Exception     1             "Exception"
INSTANT  FFI_LOAD            THREAD    FFI           0             "Interpreter: Foreign function loaded"
INSTANT  FNLOG_CONT          THREAD    FnLog         0             "Logging: Native continuation"
INSTANT  FNLOG_ENTER         THREAD    FnLog         0             "Logging: Interpreted function entered"
INSTANT  FNLOG_ENTER_JMP     THREAD    FnLog         0             "Logging: Interpreted function entered via jump"
INSTANT  FNLOG_FFI           THREAD    FnLogFFI      0             "Logging: Foreign function called in interpreter"
INSTANT  FNLOG_LEAVE         THREAD    FnLog         0             "Logging: Interpreted function left"
INSTANT  GC_PHASE_GLOBAL     PROCESSOR GCPhase       0             "GC: Handshake"
INSTANT  GC_PHASE_LOCAL      PROCESSOR GCPhase       0             "GC: Handshake"
INSTANT  GC_TRIGGER          RUNTIME   0             0             "Garbage collection triggered"
INSTANT  HEAP_ALLOC_FAILED   THREAD    HeapAlloc     0             "Heap: Allocation failed"
INSTANT  HEAP_CHUNK_FREE     RUNTIME   Chunk         0             "Heap: Chunk freed"
INSTANT  HEAP_CHUNK_NEW      RUNTIME   Chunk         0             "Heap: New Chunk allocated"
INSTANT  HEAP_LIMIT_GC       RUNTIME   0             0             "Heap: GC limit reached"
INSTANT  HEAP_LIMIT_OVERFLOW RUNTIME   0             0             "Heap: Overflow limit reached"
INSTANT  HEAP_USAGE          PROCESSOR HeapUsage     0             "Heap usage statistics"
INSTANT  LOG_BEGIN           RUNTIME   0             0             "Beginning of event log"
INSTANT  LOG_END             RUNTIME   0             0             "End of event log""
INSTANT  MODULE_INIT         THREAD    ModuleInit    1             "Module initialized"
INSTANT  MODULE_LOAD         THREAD    ModuleLoad    0             "Interpreter: Module loaded"
INSTANT  MODULE_UNLOAD       THREAD    ModuleName    0             "Interpreter: Module unloaded"
INSTANT  PROC_DESTROY        PROCESSOR 0             0             "Processor: Destroyed"
INSTANT  PROC_INIT           PROCESSOR 0             1             "Processor: Initialized"
INSTANT  PROC_MSG_RECV       LIBRARY   ProcMsgRecv   0             "Processor: Receive message"
INSTANT  PROC_MSG_SEND       LIBRARY   ProcMsgSend   1             "Processor: Send message"
INSTANT  PROC_NOTIFY         THREAD    ProcNotify    0             "Processor: Notify request"
INSTANT  PROC_REQUEST        RUNTIME   ProcRequest   1             "Processor: Request"
INSTANT  PROC_STALL          RUNTIME   ProcStall     1             "Processor: Stalling"
INSTANT  PROC_SUSPEND        THREAD    ProcSuspend   0             "Processor: Suspend request"
INSTANT  PROF_DISABLED       WORKER    0             0             "Profiling disabled"
INSTANT  PROF_ENABLED        WORKER    0             0             "Profiling enabled"
INSTANT  PROF_TRACE          WORKER    StackTrace    0             "Profiling: Stack trace collected"
INSTANT  SIGNAL              RUNTIME   Signal        0             "Signal received"
INSTANT  STACK_ACTIVATE      THREAD    Stack         0             "Stack: Activation"
INSTANT  STACK_DEACTIVATE    THREAD    Stack         0             "Stack: Deactivation"
INSTANT  STACK_GROW          THREAD    StackSize     1             "Stack: Grow"
INSTANT  STACK_SCANNED       THREAD    Stack         0             "Stack: Scanned"
INSTANT  STACK_SHRINK        THREAD    StackSize     1             "Stack: Shrink"
INSTANT  STACK_TRACE         THREAD    StackTrace    0             "Stack: Trace collected"
INSTANT  STRBUILDER_OVERFLOW THREAD    0             0             "String builder overflow"
INSTANT  SYSTEM_STATS        RUNTIME   SystemStats   0             "System statistics"
INSTANT  THREAD_ENQUEUE      LIBRARY   ThreadEnqueue 0             "Thread: Enqueue"
INSTANT  THREAD_MIGRATE      LIBRARY   ThreadMigrate 1             "Thread: Migrated to other processor"
INSTANT  THREAD_NAME         LIBRARY   ThreadName    0             "Thread: Name modified"
INSTANT  THREAD_NEW          THREAD    ThreadNew     1             "Thread: New thread created"
INSTANT  THREAD_SWITCH       THREAD    ThreadNext    1             "Thread: Switch"
INSTANT  THREAD_TAKEOVER     LIBRARY   ThreadMigrate 1             "Thread: Take over by other processor"
INSTANT  THREAD_TERMINATED   LIBRARY   0             1             "Thread: Terminated"
INSTANT  THREAD_YIELD        LIBRARY   ThreadYield   0             "Thread: Yield"
INSTANT  USER_BUFFER         LIBRARY   UserBuffer    0             "User event: Binary data"
INSTANT  USER_STRING         LIBRARY   UserString    0             "User event: String data"
INSTANT  WORKER_DESTROY      WORKER    0             0             "Worker: Destroyed"
INSTANT  WORKER_INIT         WORKER    0             0             "Worker: Initialized"
INSTANT  WORKER_NAME         WORKER    WorkerName    0             "Worker: Name modified"
