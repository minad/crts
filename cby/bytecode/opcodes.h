// Generated by generate.pl from insn.defs and priminsn.defs
#pragma once

#define CBY_FOREACH_OPCODE(OP) \
    OP(idx1) \
    OP(idx2) \
    OP(idxl1) \
    OP(idxl2) \
    OP(fset) \
    OP(tset) \
    OP(int8) \
    OP(int32) \
    OP(int64) \
    OP(uint8) \
    OP(uint32) \
    OP(uint64) \
    OP(float32) \
    OP(float64) \
    OP(string) \
    OP(buffer) \
    OP(xint) \
    OP(xintn) \
    OP(xint8) \
    OP(xint64) \
    OP(movc2) \
    OP(movc3) \
    OP(movc4) \
    OP(movcl2) \
    OP(movcl3) \
    OP(movcl4) \
    OP(mov1) \
    OP(mov2) \
    OP(mov3) \
    OP(mov4) \
    OP(movl1) \
    OP(movl2) \
    OP(thk) \
    OP(thk0) \
    OP(thk1) \
    OP(thk2) \
    OP(thk3) \
    OP(thk4) \
    OP(fn) \
    OP(fn0) \
    OP(fn1) \
    OP(fn2) \
    OP(fn3) \
    OP(fn4) \
    OP(data) \
    OP(data0) \
    OP(datal0) \
    OP(data1) \
    OP(data2) \
    OP(data3) \
    OP(data4) \
    OP(casetbl) \
    OP(case) \
    OP(cont) \
    OP(contl) \
    OP(ret) \
    OP(retl) \
    OP(retif) \
    OP(retifn) \
    OP(if) \
    OP(ifl) \
    OP(jmp) \
    OP(jmp1) \
    OP(jmp2) \
    OP(jmp3) \
    OP(jmp4) \
    OP(jmp5) \
    OP(app) \
    OP(appn) \
    OP(app1) \
    OP(app2) \
    OP(app3) \
    OP(app4) \
    OP(app5) \
    OP(clos) \
    OP(clos0) \
    OP(clos1) \
    OP(clos2) \
    OP(clos3) \
    OP(clos4) \
    OP(enter) \
    OP(enterl) \
    OP(ffiget) \
    OP(ffiset) \
    OP(ffitail) \
    OP(ffiinl) \
    OP(ffiprot) \
    OP(bitsToFloat32) \
    OP(bitsToFloat64) \
    OP(charEq) \
    OP(charLe) \
    OP(charLt) \
    OP(charNe) \
    OP(charToString) \
    OP(charToUInt32) \
    OP(float32Abs) \
    OP(float32Acos) \
    OP(float32Add) \
    OP(float32Asin) \
    OP(float32Atan) \
    OP(float32Ceil) \
    OP(float32Cos) \
    OP(float32Cosh) \
    OP(float32Div) \
    OP(float32Eq) \
    OP(float32Exp) \
    OP(float32Expm1) \
    OP(float32Floor) \
    OP(float32Le) \
    OP(float32Log) \
    OP(float32Log1p) \
    OP(float32Lt) \
    OP(float32Max) \
    OP(float32Min) \
    OP(float32Mul) \
    OP(float32Ne) \
    OP(float32Neg) \
    OP(float32Pow) \
    OP(float32Round) \
    OP(float32Sin) \
    OP(float32Sinh) \
    OP(float32Sqrt) \
    OP(float32Sub) \
    OP(float32Tan) \
    OP(float32Tanh) \
    OP(float32ToBits) \
    OP(float32ToFloat64) \
    OP(float32ToInt) \
    OP(float32ToInt32) \
    OP(float32ToInt64) \
    OP(float32ToUInt32) \
    OP(float32ToUInt64) \
    OP(float32Trunc) \
    OP(float64Abs) \
    OP(float64Acos) \
    OP(float64Add) \
    OP(float64Asin) \
    OP(float64Atan) \
    OP(float64Ceil) \
    OP(float64Cos) \
    OP(float64Cosh) \
    OP(float64Div) \
    OP(float64Eq) \
    OP(float64Exp) \
    OP(float64Expm1) \
    OP(float64Floor) \
    OP(float64Le) \
    OP(float64Log) \
    OP(float64Log1p) \
    OP(float64Lt) \
    OP(float64Max) \
    OP(float64Min) \
    OP(float64Mul) \
    OP(float64Ne) \
    OP(float64Neg) \
    OP(float64Pow) \
    OP(float64Round) \
    OP(float64Sin) \
    OP(float64Sinh) \
    OP(float64Sqrt) \
    OP(float64Sub) \
    OP(float64Tan) \
    OP(float64Tanh) \
    OP(float64ToBits) \
    OP(float64ToFloat32) \
    OP(float64ToInt) \
    OP(float64ToInt32) \
    OP(float64ToInt64) \
    OP(float64ToUInt32) \
    OP(float64ToUInt64) \
    OP(float64Trunc) \
    OP(int16ToInt32) \
    OP(int32Add) \
    OP(int32And) \
    OP(int32Div) \
    OP(int32Eq) \
    OP(int32Le) \
    OP(int32Lt) \
    OP(int32Mod) \
    OP(int32Mul) \
    OP(int32Ne) \
    OP(int32Neg) \
    OP(int32Not) \
    OP(int32Or) \
    OP(int32Quot) \
    OP(int32Rem) \
    OP(int32Shl) \
    OP(int32Shr) \
    OP(int32Sub) \
    OP(int32ToFloat32) \
    OP(int32ToFloat64) \
    OP(int32ToInt) \
    OP(int32ToInt16) \
    OP(int32ToInt64) \
    OP(int32ToInt8) \
    OP(int32ToUInt32) \
    OP(int32ToUInt64) \
    OP(int32Xor) \
    OP(int64Add) \
    OP(int64And) \
    OP(int64Div) \
    OP(int64Eq) \
    OP(int64Le) \
    OP(int64Lt) \
    OP(int64Mod) \
    OP(int64Mul) \
    OP(int64Ne) \
    OP(int64Neg) \
    OP(int64Not) \
    OP(int64Or) \
    OP(int64Quot) \
    OP(int64Rem) \
    OP(int64Shl) \
    OP(int64Shr) \
    OP(int64Sub) \
    OP(int64ToFloat32) \
    OP(int64ToFloat64) \
    OP(int64ToInt) \
    OP(int64ToInt32) \
    OP(int64ToUInt32) \
    OP(int64ToUInt64) \
    OP(int64Xor) \
    OP(int8ToInt32) \
    OP(intAdd) \
    OP(intAnd) \
    OP(intCmp) \
    OP(intDiv) \
    OP(intEq) \
    OP(intLe) \
    OP(intLt) \
    OP(intMod) \
    OP(intMul) \
    OP(intNe) \
    OP(intNeg) \
    OP(intNot) \
    OP(intOr) \
    OP(intQuot) \
    OP(intRem) \
    OP(intShl) \
    OP(intShr) \
    OP(intSub) \
    OP(intToFloat32) \
    OP(intToFloat64) \
    OP(intToInt32) \
    OP(intToInt64) \
    OP(intToUInt32) \
    OP(intToUInt64) \
    OP(intXor) \
    OP(stringCmp) \
    OP(stringCursorBegin) \
    OP(stringCursorEnd) \
    OP(stringCursorEq) \
    OP(stringCursorGet) \
    OP(stringCursorNext) \
    OP(stringCursorPrev) \
    OP(stringEq) \
    OP(stringLe) \
    OP(stringLt) \
    OP(stringNe) \
    OP(stringNull) \
    OP(substring) \
    OP(uint16ToUInt32) \
    OP(uint32Add) \
    OP(uint32And) \
    OP(uint32Div) \
    OP(uint32Eq) \
    OP(uint32Le) \
    OP(uint32Lt) \
    OP(uint32Mod) \
    OP(uint32Mul) \
    OP(uint32Ne) \
    OP(uint32Neg) \
    OP(uint32Not) \
    OP(uint32Or) \
    OP(uint32Shl) \
    OP(uint32Shr) \
    OP(uint32Sub) \
    OP(uint32ToChar) \
    OP(uint32ToFloat32) \
    OP(uint32ToFloat64) \
    OP(uint32ToInt) \
    OP(uint32ToInt32) \
    OP(uint32ToInt64) \
    OP(uint32ToUInt16) \
    OP(uint32ToUInt64) \
    OP(uint32ToUInt8) \
    OP(uint32Xor) \
    OP(uint64Add) \
    OP(uint64And) \
    OP(uint64Div) \
    OP(uint64Eq) \
    OP(uint64Le) \
    OP(uint64Lt) \
    OP(uint64Mod) \
    OP(uint64Mul) \
    OP(uint64Ne) \
    OP(uint64Neg) \
    OP(uint64Not) \
    OP(uint64Or) \
    OP(uint64Shl) \
    OP(uint64Shr) \
    OP(uint64Sub) \
    OP(uint64ToFloat32) \
    OP(uint64ToFloat64) \
    OP(uint64ToInt) \
    OP(uint64ToInt32) \
    OP(uint64ToInt64) \
    OP(uint64ToUInt32) \
    OP(uint64Xor) \
    OP(uint8ToUInt32) \
    OP(force) \
    OP(par) \
    OP(boolFalse) \
    OP(boolTrue) \
    OP(stringBuilderNew) \
    OP(stringBuilderChar) \
    OP(stringBuilderString) \
    OP(stringBuilderBuild) \
    OP(bufferSize) \
    OP(arraySize) \
    OP(arrayCas) \
    OP(arrayClone) \
    OP(arrayCopy) \
    OP(arrayNew) \
    OP(arrayRead) \
    OP(arrayWrite) \
    OP(bufferClone) \
    OP(bufferCmp) \
    OP(bufferCopy) \
    OP(bufferFill) \
    OP(bufferNew) \
    OP(bufferReadFloat32) \
    OP(bufferReadFloat64) \
    OP(bufferReadUInt16) \
    OP(bufferReadUInt32) \
    OP(bufferReadUInt64) \
    OP(bufferReadUInt8) \
    OP(bufferWriteFloat32) \
    OP(bufferWriteFloat64) \
    OP(bufferWriteUInt16) \
    OP(bufferWriteUInt32) \
    OP(bufferWriteUInt64) \
    OP(bufferWriteUInt8) \
    OP(catch) \
    OP(throw) \
    OP(identical) \
    OP(tag)

#define _CBY_OPCODE_ENUM(op) OP_##op,
typedef enum { CBY_FOREACH_OPCODE(_CBY_OPCODE_ENUM) } Opcode;
#undef _CBY_OPCODE_ENUM

enum {
    OPCODE_COUNT = 347,
    OPCODE_MAXLEN = 7,
    OPCODE_PRIM = 87
};
